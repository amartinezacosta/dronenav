<?xml version="1.0"?>
<launch>
    <!-- Simulation arguments-->
  <arg name="x" default="20.0" />
  <arg name="y" default="0.0" />
  <arg name="z" default="0.0" />
  <arg name="R" default="0.0" />
  <arg name="P" default="0.0" />
  <arg name="Y" default="0.0" />
  <arg name="est" default="ekf2" />
  <arg name="vehicle" default="iris_depth_camera" />
  <arg name="world" default="$(find dronenav)/worlds/nfac_section_0.world" />
  <arg name="sdf" default="$(find px4)/Tools/sitl_gazebo/models/$(arg vehicle)/$(arg vehicle).sdf" />

  <arg name="gui" default="true" />
  <arg name="debug" default="false" />
  <arg name="verbose" default="false" />
  <arg name="paused" default="false" />
  <arg name="respawn_gazebo" default="false" />
  <arg name="fcu_url" default="udp://:14540@localhost:14557" />
  <arg name="respawn_mavros" default="false" />
  <arg name="interactive" default="true" />

    <!-- PX4 SITL and Gazebo Simulation-->
  <include file="$(find px4)/launch/posix_sitl.launch">
      <arg name="x" value="$(arg x)" />
      <arg name="y" value="$(arg y)" />
      <arg name="z" value="$(arg z)" />
      <arg name="R" value="$(arg R)" />
      <arg name="P" value="$(arg P)" />
      <arg name="Y" value="$(arg Y)" />
      <arg name="world" value="$(arg world)" />
      <arg name="vehicle" value="iris" />
      <arg name="sdf" value="$(arg sdf)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="interactive" value="$(arg interactive)" />
      <arg name="debug" value="$(arg debug)" />
      <arg name="verbose" value="$(arg verbose)" />
      <arg name="paused" value="$(arg paused)" />
      <arg name="respawn_gazebo" value="$(arg respawn_gazebo)" />
  </include>

  <!-- mavros node -->
  <include file="$(find mavros)/launch/px4.launch">
      <arg name="gcs_url" value="" />
      <arg name="fcu_url" value="$(arg fcu_url)" />
      <arg name="respawn_mavros" value="$(arg respawn_mavros)" />
  </include>

  <!-- camera transform node -->
  <node pkg="tf" type="static_transform_publisher" name="tf_camera_baseLink"
        args="0.1 0.0 0.0 -1.57 0 -1.57 base_link camera_link 30" />

  <!-- dronenav node -->
  <node pkg="dronenav" type="dronenav_node" name="dronenav" output="screen">
    <param name="connect_tries" type="int" value="10"/>
    <param name="arm_tries" type="int" value="10"/>
    <param name="offboard_mode_tries" type="int" value="10"/>
    <param name="reach_radius_sqr" value="0.1"/>
    <param name="yaw_min_error" value="0.1"/>
    <param name="waypoint_timeout" value="30.0"/>
    <param name="moving_tick_resolution" value="0.01"/>
    <param name="cruise_speed" value="0.5"/>
  </node>

  <!-- Octomap sever node-->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" 
    args="$(find global_planner)/octomaps/NFAC_section_0.bt">
    <param name="frame_id" type="string" value="map" />
    <param name="base_frame_id" type="string" value="camera_link"/>
    <param name="resolution" value="0.2" />
    <param name="sensor_model/max_range" value="5.0" />
  </node> 

  <!-- Waypoint generation node -->
  <node pkg="waypoint_generation" type="waypoint_generation_node"
    name="waypoint_generation">
    <param name="floor_threshold" value="2.0" />
    <param name="ceil_threshold" value="25.0" />
    <param name="depth" type="int" value="16" />
    <param name="draw_normals" type="bool" value="true" />
    <param name="draw_waypoints" type="bool" value="true" />
    <param name="draw_normals" type="bool" value="true" />
    <param name="downsample" type="int" value="100" />
    <param name="standoff_multiplier" value="2.0" />
  </node>

  <!-- Path planner node -->
  <node pkg="global_planner" type="global_planner_node" name="global_planner"
    output="screen">
    <param name="ceil_threshold" value="22.0" />
    <param name="floor_threshold" value="2.5" />
    <param name="depth" type="int" value="15" />
    <param name="neighbor_max_count" type="int" value="4" />
    <param name="start_radius_multiplier" value="2.0" />
    <param name="goal_radius_multiplier" value="2.0" />
    <param name="yaw_towards_path" type="bool" value="true" />
    <param name="draw_vertices" type="bool" value="false" />
    <param name="draw_edges" type="bool" value="false" />
    <param name="draw_start" type="bool" value="true" />
    <param name="draw_goal" type="bool" value="true" />
    <param name="draw_path" type="bool" value="true" />
    <param name="log_path_waypoints" type="bool" value="true" />
  </node>

  <!-- QR detection and tracking node -->
  <node pkg="qr_tracking" type="qr_tracking_node" name="qr_tracking"
    output="screen">
    <param name="image_width" type="int" value="640"/>
    <param name="hits_min_threshold" type="int" value="3"/>
    <param name="missed_max_threshold" type="int" value="5"/>
    <param name="detection_distance_threshold" value="0.8"/>
  </node>

  <!-- dronenav save image action server -->
  <node pkg="dronenav_actions" type="image_saver_node" 
    name="image_saver_node" output="screen">
    <param name="image_topic" type="string" value="camera/rgb/image_raw"/>
  </node>

  <!-- dronenav save pointcloud action server-->
  <node pkg="dronenav_actions" type="pointcloud_saver_node"
    name="pointcloud_saver_node" output="screen">
    <param name="pointcloud_topic" type="string" value="camera/depth/points"/>
  </node>

  <!--rviz-->
  <node pkg="rviz" type="rviz" name="rviz" 
    args="-d $(find dronenav_tests)/rviz/dronenav_test.rviz"/>
</launch>
